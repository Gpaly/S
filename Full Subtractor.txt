module FullSubtractor(
    input A, B, Bin,
    output Diff, Bout
);
    wire w1, w2, w3;

    // Difference = A XOR B XOR Bin
    xor (w1, A, B);
    xor (Diff, w1, Bin);

    // Borrow-out = (~A & B) | (~A & Bin) | (B & Bin)
    and (w2, ~A, B);
    and (w3, ~A, Bin);
    or (Bout, w2, w3, (B & Bin));
endmodule

TEST BENCH

module tb_FullSubtractor;
    reg A, B, Bin;
    wire Diff, Bout;

    FullSubtractor uut (.A(A), .B(B), .Bin(Bin), .Diff(Diff), .Bout(Bout));

    initial begin
        $monitor("A=%b B=%b Bin=%b | Diff=%b Bout=%b", A, B, Bin, Diff, Bout);
        A = 0; B = 0; Bin = 0; #10;
        A = 0; B = 1; Bin = 0; #10;
        A = 1; B = 0; Bin = 1; #10;
        A = 1; B = 1; Bin = 1; #10;
        $finish;
    end
endmodule
